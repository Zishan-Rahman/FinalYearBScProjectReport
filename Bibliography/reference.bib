@online{gdquest-repo,
	author = {Nathan Lovato et al.},
	title = {Godot Procedural Generation},
	url = {https://github.com/GDQuest/godot-procedural-generation}
}

@online{kccprocgenrepo,
	author = {Chris Bradfield et al.},
	title = {Exploring Procedural Generation algorithms in Godot},
	url = {https://github.com/kidscancode/godot3_procgen_demos}
}

@online{gd3perlinnoise,
	author = {Guilherme Oliveira},
	title = {"Intro to Procedural Levels in Godot 3.1: Perlin Noise Tutorial"},
	url = {https://youtu.be/m6mu4uPGrMk}
}

@online{teleonto,
	author = {Mick West},
	publisher = {Gamasutra},
	title = {Random Scattering: Creating Realistic Landscapes},
	url = {http://web.archive.org/web/20080826103432/http://www.gamasutra.com/view/feature/1648/random_scattering_creating_.php?page=2}
}

@inproceedings{10.1007/978-3-030-63007-2_69,
	abstract = {In this paper a comparison of selected algorithms used to procedurally generate terrain for video games is presented. The algorithms' performance is tested with two implementation environments: Unity and Godot. Results are aggregated and discussed. Conclusions drawn are of two types: intuitive and counter-intuitive.},
	address = {Cham},
	author = {Marek Kopel and Grzegorz Maciejewski},
	booktitle = {Computational Collective Intelligence},
	editor = {Ngoc Thanh Nguyen and Bao Hung Hoang and Cong Phap Huynh and Dosam Hwang and Bogdan Trawi{\'n}ski and Gottfried Vossen},
	isbn = {978-3-030-63007-2},
	pages = {878--887},
	publisher = {Springer International Publishing},
	title = {Comparison of Procedural Noise-Based Environment Generation Methods},
	url = {https://link.springer.com/chapter/10.1007/978-3-030-63007-2_69},
	year = {2020}
}

@online{pcgwiki,
	author = {others},
	publisher = {Wikidot},
	title = {Procedural Generation Wiki},
	url = {http://pcg.wikidot.com/}
}

@online{gddocsimplex,
	author = {others},
	title = {OpenSimplexNoise},
	url = {https://docs.godotengine.org/en/3.5/classes/class_opensimplexnoise.html}
}

@online{gdblogsimplex,
	author = {Joan Fons},
	date = {19},
	month = sep,
	title = {Simplex noise lands in Godot 3.1},
	url = {https://godotengine.org/article/simplex-noise-lands-godot-31},
	year = {2018}
}

@inproceedings{10.1007/978-3-031-21671-8_6,
	abstract = {Task environments developed in Minecraft are becoming increasingly popular for artificial intelligence (AI) research. However, most of these are currently constructed manually, thus failing to take advantage of procedural content generation (PCG), a capability unique to virtual task environments. In this paper, we present mcg, an open-source library to facilitate implementing PCG algorithms for voxel-based environments such as Minecraft. The library is designed with human-machine teaming research in mind, and thus takes a `top-down' approach to generation, simultaneously generating low and high level machine-readable representations that are suitable for empirical research. These can be consumed by downstream AI applications that consider human spatial cognition. The benefits of this approach include rapid, scalable, and efficient development of virtual environments, the ability to control the statistics of the environment at a semantic level, and the ability to generate novel environments in response to player actions in real time.},
	address = {Cham},
	author = {Adarsh Pyarelal and Aditya Banerjee and Kobus Barnard},
	booktitle = {Computational Theory of Mind for Human-Machine Teams},
	editor = {Nikolos Gurney and Gita Sukthankar},
	isbn = {978-3-031-21671-8},
	pages = {85--101},
	publisher = {Springer Nature Switzerland},
	title = {Modular Procedural Generation for Voxel Maps},
	year = {2022}
}

@article{freiknecht2017survey,
	author = {Jonas Freiknecht and Wolfgang Effelsberg},
	journal = {Multimodal Technologies and Interaction},
	number = {4},
	pages = {27},
	publisher = {MDPI},
	title = {A survey on the procedural generation of virtual worlds},
	volume = {1},
	year = {2017}
}

